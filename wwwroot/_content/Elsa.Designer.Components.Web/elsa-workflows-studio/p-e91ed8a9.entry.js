import{r as s,h as e}from"./p-9ac75b7d.js";import{S as t}from"./p-52f280e6.js";import{T as o}from"./p-7fe465ee.js";import{g as r}from"./p-83f2454e.js";import"./p-83f217d4.js";import"./p-f0c26962.js";import"./p-80452beb.js";import"./p-c912e9a0.js";import"./p-bd8b186e.js";import"./p-adbb57a5.js";const a=class{constructor(e){s(this,e)}async componentWillLoad(){this.currentValue=this.propertyModel.expressions[this.propertyDescriptor.defaultSyntax||t.Literal]||void 0,this.items=await r(this.serverUrl,this.propertyDescriptor)}onChange(e){this.propertyModel.expressions[this.propertyDescriptor.defaultSyntax||t.Literal]=this.currentValue=e.target.value}onDefaultSyntaxValueChanged(e){this.currentValue=e.detail}render(){const t=this.propertyDescriptor,r=this.propertyModel,s=t.name,o=s,a=s;let p=this.currentValue;const i=this.items;if(null==p){const e=this.propertyDescriptor.defaultValue;p=e?e.toString():void 0}return e("elsa-property-editor",{propertyDescriptor:t,propertyModel:r,onDefaultSyntaxValueChanged:e=>this.onDefaultSyntaxValueChanged(e),"single-line":!0},e("select",{id:o,name:a,onChange:e=>this.onChange(e),class:"elsa-mt-1 elsa-block focus:elsa-ring-blue-500 focus:elsa-border-blue-500 elsa-w-full elsa-shadow-sm sm:elsa-max-w-xs sm:elsa-text-sm elsa-border-gray-300 elsa-rounded-md"},i.map((t=>{const r="object"==typeof t,s=r?t.value:t.toString(),o=r?t.text:t.toString();return e("option",{value:s,selected:s===p},o)}))))}};o.injectProps(a,["serverUrl"]);export{a as elsa_dropdown_property};