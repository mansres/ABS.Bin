import{r as t,h as e}from"./p-9ac75b7d.js";import{S as s}from"./p-52f280e6.js";import{p as o}from"./p-ab6c762d.js";import{T as r}from"./p-7fe465ee.js";import{g as a}from"./p-83f2454e.js";import"./p-c912e9a0.js";import"./p-bd8b186e.js";import"./p-83f217d4.js";import"./p-f0c26962.js";import"./p-80452beb.js";import"./p-adbb57a5.js";const i=class{constructor(e){t(this,e)}async componentWillLoad(){this.currentValue=this.propertyModel.expressions[s.Json]||"[]"}onValueChanged(e){const t=e.map((e=>"string"==typeof e?e:"number"==typeof e||"boolean"==typeof e?e.toString():e.value));this.currentValue=JSON.stringify(t),this.propertyModel.expressions[s.Json]=this.currentValue}onDefaultSyntaxValueChanged(e){this.currentValue=e.detail}createKeyValueOptions(e){return null===e?e:e.map((e=>"string"==typeof e?{text:e,value:e}:e))}async componentWillRender(){this.items=await a(this.serverUrl,this.propertyDescriptor)}render(){const t=this.propertyDescriptor,r=this.propertyModel,s=t.name,a=s,i=s,p=o(this.currentValue),n=!!t.options&&t.options.length>0,l=this.createKeyValueOptions(this.items),u=n?e("elsa-input-tags-dropdown",{dropdownValues:l,values:p,fieldId:a,fieldName:i,onValueChanged:e=>this.onValueChanged(e.detail)}):e("elsa-input-tags",{values:p,fieldId:a,fieldName:i,onValueChanged:e=>this.onValueChanged(e.detail)});return e("elsa-property-editor",{propertyDescriptor:t,propertyModel:r,onDefaultSyntaxValueChanged:e=>this.onDefaultSyntaxValueChanged(e),"single-line":!0},u)}};r.injectProps(i,["serverUrl"]);export{i as elsa_multi_text_property};