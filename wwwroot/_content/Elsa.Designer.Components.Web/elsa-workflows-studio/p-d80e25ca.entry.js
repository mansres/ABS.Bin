import{r as s,h as e}from"./p-9ac75b7d.js";import{S as t}from"./p-52f280e6.js";import{p as a}from"./p-ab6c762d.js";import{g as l}from"./p-83f2454e.js";import{T as r}from"./p-7fe465ee.js";import"./p-c912e9a0.js";import"./p-bd8b186e.js";import"./p-f0c26962.js";import"./p-80452beb.js";import"./p-adbb57a5.js";import"./p-83f217d4.js";const i=class{constructor(e){s(this,e)}async componentWillLoad(){null==this.propertyModel.expressions[t.Json]&&(this.propertyModel.expressions[t.Json]=JSON.stringify(this.propertyDescriptor.defaultValue)),this.currentValue=this.propertyModel.expressions[t.Json]||"[]"}onCheckChanged(e){const s=e.target,r=s.checked,l=s.value;let i=a(this.currentValue);i=r?[...i,l].distinct():i.filter((e=>e!==l)),this.currentValue=JSON.stringify(i),this.propertyModel.expressions[t.Json]=this.currentValue}onDefaultSyntaxValueChanged(e){this.currentValue=e.detail}async componentWillRender(){this.items=await l(this.serverUrl,this.propertyDescriptor)}render(){const s=this.propertyDescriptor,t=this.propertyModel,r=s.name,l=this.items,i=a(this.currentValue)||[];return e("elsa-property-editor",{propertyDescriptor:s,propertyModel:t,onDefaultSyntaxValueChanged:e=>this.onDefaultSyntaxValueChanged(e),"single-line":!0},e("div",{class:"elsa-max-w-lg elsa-space-y-3 elsa-my-4"},l.map(((s,t)=>{const a=`${r}_${t}`,l="string"==typeof s,o=l?s:s.value,p=l?s:s.text,n=i.findIndex((e=>e==o))>=0;return e("div",{class:"elsa-relative elsa-flex elsa-items-start"},e("div",{class:"elsa-flex elsa-items-center elsa-h-5"},e("input",{id:a,type:"checkbox",checked:n,value:o,onChange:e=>this.onCheckChanged(e),class:"focus:elsa-ring-blue-500 elsa-h-4 elsa-w-4 elsa-text-blue-600 elsa-border-gray-300 elsa-rounded"})),e("div",{class:"elsa-ml-3 elsa-mt-1 elsa-text-sm"},e("label",{htmlFor:a,class:"elsa-font-medium elsa-text-gray-700"},p)))}))))}};r.injectProps(i,["serverUrl"]);export{i as elsa_check_list_property};